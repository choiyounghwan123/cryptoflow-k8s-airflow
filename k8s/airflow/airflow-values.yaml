executor: KubernetesExecutor

# 웹서버 활성화
webserver:
  enabled: true

# PostgreSQL 연결 설정
data:
  metadataConnection:
    user: airflow
    pass: airflow123
    protocol: postgresql
    host: postgresql-service.airflow.svc.cluster.local
    port: 5432
    db: airflow
    sslmode: disable

dags:
  gitSync:
    enabled: true
    repo: "https://github.com/choiyounghwan123/cryptoflow-k8s-airflow.git"
    branch: main
    subPath: "dags"

kubernetesExecutor:
  deleteWorkerPods: false
  deleteWorkerPodsOnSuccess: false
  deleteWorkerPodsOnFailure: false

serviceAccount:
  create: true
  name: airflow

rbac:
  create: true

postgresql:
  enabled: false

# 기본 설정 사용 - Secret은 자동으로 생성되도록
createUserJob:
  useHelmHooks: false

migrateDatabaseJob:
  useHelmHooks: false

# Airflow 환경 변수 설정 (AWS credentials 포함)
env:
  - name: AIRFLOW__LOGGING__REMOTE_LOGGING
    value: "True"
  - name: AIRFLOW__LOGGING__REMOTE_BASE_LOG_FOLDER
    value: "s3://airflow-logs/"
  - name: AIRFLOW__LOGGING__REMOTE_LOG_CONN_ID
    value: "minio_conn"
  - name: AIRFLOW__LOGGING__ENCRYPT_S3_LOGS
    value: "False"
  - name: AIRFLOW__KUBERNETES_EXECUTOR__DELETE_WORKER_PODS
    value: "True"
  - name: AIRFLOW__KUBERNETES_EXECUTOR__DELETE_WORKER_PODS_ON_SUCCESS
    value: "True"
  - name: AIRFLOW__KUBERNETES_EXECUTOR__DELETE_WORKER_PODS_ON_FAILURE
    value: "False"
  # AWS credentials for MinIO
  - name: AWS_ACCESS_KEY_ID
    value: "mlflow"
  - name: AWS_SECRET_ACCESS_KEY
    value: "mlflowpass"
  - name: AWS_DEFAULT_REGION
    value: "us-east-1"
  - name: AWS_ENDPOINT_URL_S3
    value: "http://minio-service.default.svc.cluster.local:9000"

# MinIO connection 설정
connections:
  - conn_id: minio_conn
    conn_type: aws  # Airflow 3.0.2에서는 'aws' 타입 사용[148][159]
    conn_extra: |
      {
        "endpoint_url": "http://minio-service.default.svc.cluster.local:9000",
        "aws_access_key_id": "mlflow",
        "aws_secret_access_key": "mlflowpass",
        "region_name": "us-east-1"
      }